#!/bin/bash
commit_msg_file="$1"
commit_msg=$(cat "$commit_msg_file")
branch_name=$(git symbolic-ref --quiet --short HEAD 2>/dev/null)

if [[ -z "$branch_name" ]]; then
  exit 0
fi

if [[ $branch_name =~ ^feature\/(DEV[0-9]{4}).*$ ]]; then
  ticket="${BASH_REMATCH[1]}"
  if [[ ! $commit_msg =~ \[$ticket\] ]]; then
    echo "[ERROR] 'feature' 브랜치에서는 커밋 메시지에 [${ticket}] 형식을 포함해야 합니다."
    exit 1
  fi
elif [[ $branch_name =~ ^fix_ng_([0-9]+).*$ ]]; then
  num="${BASH_REMATCH[1]}"
  if [[ ! $commit_msg =~ \[fix_ng_${num}\] ]]; then
    echo "[ERROR] 'fix_ng' 브랜치에서는 커밋 메시지에 [fix_ng_${num}] 형식을 포함해야 합니다."
    exit 1
  fi
elif [[ $branch_name =~ ^refactor_([0-9]+).*$ ]]; then
  num="${BASH_REMATCH[1]}"
  if [[ ! $commit_msg =~ \[refactor_${num}\] ]]; then
    echo "[ERROR] 'refactor' 브랜치에서는 커밋 메시지에 [refactor_${num}] 형식을 포함해야 합니다."
    exit 1
  fi
fi

exit 0